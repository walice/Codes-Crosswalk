previous_prob <- 0
prob <- NULL
for (i in 1:pop.size){
prob[i] <- previous_prob + fitness[i]/sum(fitness)
previous_prob <- prob[i]
}
newpop <- pop
for (i in 1:pop.size){
u <- runif(1)
good <- pop[prob < u]
good <- ifelse(length(good) > 0, good, runif(1, -3, 3))
newpop[i] <- tail(good,1)
#newpop[i] <- pop[max(which (prob < u))]
}
# Crossover
parent_A <- newpop[1:(pop.size/2)]
parent_B <- newpop[(pop.size/2+1):pop.size]
p <- runif(1)
offspring_A <- p*parent_A + (1-p)*parent_B
offspring_B <- p*parent_B + (1-p)*parent_A
newpop <- c(offspring_A, offspring_B)
# Mutation
newpop <- runif(pop.size, min(newpop), max(newpop))
for (i in 1:pop.size) {
fitness[i] <- claw(newpop[i])
}
max(fitness)
pop <- newpop
}
max(fitness)
length(prob < u)
claw <- function(xx) {
x <- xx[1]
y <- (0.46 * (dnorm(x, -1, 2/3) + dnorm(x, 1, 2/3)) +
(1/300) * (dnorm(x, -0.5, 0.01) + dnorm(x, -1, 0.01) +
+ dnorm(x, -1.5, 0.01)) +
(7/300) * (dnorm(x, 0.5, 0.07) + dnorm(x, 1, 0.07) +
+ dnorm(x, 1.5, 0.07)))
return(y)
}
max.iter <- 100
pop.size <- 500
fitness <- NULL
newpop <- NULL
pop <- runif(pop.size, -3, 3)
# Generate initial population and evaluate fitness
iter <- 0
while (iter < max.iter){
iter <- iter + 1
# Evaluate fitness
for (i in 1:pop.size) {
fitness[i] <- claw(pop[i])
}
max(fitness)
# Roulette wheel selection
previous_prob <- 0
prob <- NULL
for (i in 1:pop.size){
prob[i] <- previous_prob + fitness[i]/sum(fitness)
previous_prob <- prob[i]
}
newpop <- pop
for (i in 1:pop.size){
u <- runif(1)
# good <- pop[prob < u]
# good <- ifelse(length(good) > 0, good, runif(1, -3, 3))
# newpop[i] <- tail(good,1)
if (length(prob < u) = 0) {
newpop[i] <- pop[1]
} else {
newpop[i] <- pop[max(which (prob < u))]
}
}
# Crossover
parent_A <- newpop[1:(pop.size/2)]
parent_B <- newpop[(pop.size/2+1):pop.size]
p <- runif(1)
offspring_A <- p*parent_A + (1-p)*parent_B
offspring_B <- p*parent_B + (1-p)*parent_A
newpop <- c(offspring_A, offspring_B)
# Mutation
newpop <- runif(pop.size, min(newpop), max(newpop))
for (i in 1:pop.size) {
fitness[i] <- claw(newpop[i])
}
max(fitness)
pop <- newpop
}
claw <- function(xx) {
x <- xx[1]
y <- (0.46 * (dnorm(x, -1, 2/3) + dnorm(x, 1, 2/3)) +
(1/300) * (dnorm(x, -0.5, 0.01) + dnorm(x, -1, 0.01) +
+ dnorm(x, -1.5, 0.01)) +
(7/300) * (dnorm(x, 0.5, 0.07) + dnorm(x, 1, 0.07) +
+ dnorm(x, 1.5, 0.07)))
return(y)
}
max.iter <- 100
pop.size <- 500
fitness <- NULL
newpop <- NULL
pop <- runif(pop.size, -3, 3)
# Generate initial population and evaluate fitness
iter <- 0
iter <- iter + 1
# Evaluate fitness
for (i in 1:pop.size) {
fitness[i] <- claw(pop[i])
}
max(fitness)
# Roulette wheel selection
previous_prob <- 0
prob <- NULL
for (i in 1:pop.size){
prob[i] <- previous_prob + fitness[i]/sum(fitness)
previous_prob <- prob[i]
}
newpop <- pop
for (i in 1:pop.size){
u <- runif(1)
# good <- pop[prob < u]
# good <- ifelse(length(good) > 0, good, runif(1, -3, 3))
# newpop[i] <- tail(good,1)
if (length(prob < u) = 0) {
newpop[i] <- pop[1]
} else {
newpop[i] <- pop[max(which (prob < u))]
}
}
for (i in 1:pop.size){
u <- runif(1)
# good <- pop[prob < u]
# good <- ifelse(length(good) > 0, good, runif(1, -3, 3))
# newpop[i] <- tail(good,1)
if (length(prob < u) = 0) {
newpop[i] <- pop[1]
} else {
newpop[i] <- pop[max(which (prob < u))]
}}
for (i in 1:pop.size){
u <- runif(1)
# good <- pop[prob < u]
# good <- ifelse(length(good) > 0, good, runif(1, -3, 3))
# newpop[i] <- tail(good,1)
if (length(prob < u) == 0) {
newpop[i] <- pop[1]
} else {
newpop[i] <- pop[max(which (prob < u))]
}}
length(prob < u)
max(which (prob < u))
pop[419]
which(prob < u)
pop[max(which (prob < u))]
u <- runif(1)
# good <- pop[prob < u]
# good <- ifelse(length(good) > 0, good, runif(1, -3, 3))
# newpop[i] <- tail(good,1)
if (length(prob < u) == 0) {
newpop[i] <- pop[1]
} else {
newpop[i] <- pop[max(which (prob < u))]
for (i in 1:pop.size){
u <- runif(1)
# good <- pop[prob < u]
# good <- ifelse(length(good) > 0, good, runif(1, -3, 3))
# newpop[i] <- tail(good,1)
if (length(prob < u) == 0) {
newpop[i] <- pop[1]
} else {
newpop[i] <- pop[max(which (prob < u))]
}
}
newpop <- pop
newpop <- pop
for (i in 1:pop.size){
u <- runif(1)
# good <- pop[prob < u]
# good <- ifelse(length(good) > 0, good, runif(1, -3, 3))
# newpop[i] <- tail(good,1)
if (length(prob < u) == 0) {
newpop[i] <- pop[1]
} else {
newpop[i] <- pop[max(which (prob < u))]
}
}
#setwd("C:/Users/Alice/Box Sync/PhD/Software/Codes-Masterlist") # Laptop
setwd("C:/boxsync/alepissier/PhD/Software/Codes-Masterlist") # Bren
library(tidyverse)
library(readxl)
#library(xlsx)
library(openxlsx)
# Import three sheets
codes <- read_xlsx("Codes_Masterlist.xlsx", sheet = "Codes") %>%
mutate_all(as.character)
#setwd("C:/Users/Alice/Box Sync/PhD/Software/Codes-Masterlist") # Laptop
setwd("C:/boxsync/alepissier/PhD/Software/Codes-Masterlist") # Bren
getwd()
# Import three sheets
codes <- read_xlsx("Codes_Masterlist.xlsx", sheet = "Codes") %>%
mutate_all(as.character)
regional <- read_xlsx("Codes_Masterlist.xlsx",
sheet = "UN_Regional_Groupings") %>%
mutate_all(as.character)
wb <- read_xlsx("Codes_Masterlist.xlsx",
sheet = "World_Bank_Groupings") %>%
mutate_all(as.character)
# June 2018 classification
WB <- read_xls("CLASS.xls", skip = 4)
WB <- WB %>%
select(Economy, Code, Region, `Income group`, `Lending category`, Other) %>%
rename(Country = Economy, ISO3166.3 = Code, WB_Income_Group = `Income group`,
Lending_Category = `Lending category`, WB_Other = Other) %>%
filter(Country != "x")
WB$WB_Income_Group_Code2 <- NA
WB$WB_Income_Group_Code2 <- ifelse(WB$WB_Income_Group == "Low income", "LIC", WB$WB_Income_Group_Code2)
WB$WB_Income_Group_Code2 <- ifelse(WB$WB_Income_Group == "Lower middle income", "LMC", WB$WB_Income_Group_Code2)
WB$WB_Income_Group_Code2 <- ifelse(WB$WB_Income_Group == "Upper middle income", "UMC", WB$WB_Income_Group_Code2)
WB$WB_Income_Group_Code2 <- ifelse(WB$WB_Income_Group == "High income", "HIC", WB$WB_Income_Group_Code2)
no.group <- WB %>% filter(is.na(WB_Income_Group_Code2))
View(no.group)
View(codes)
codes <- left_join(codes, WB %>% select(ISO3166.3, Lending_Category, WB_Other, WB_Income_Group_Code2),
by = c("ISO3166.3"))
codes %>% filter(codes$WB_Income_Group_Code != WB_Income_Group_Code2) %>% nrow
codes$WB_Income_Group_Code2 <- NULL
View(codes)
#setwd("C:/Users/Alice/Box Sync/PhD/Software/Codes-Masterlist") # Laptop
setwd("C:/boxsync/alepissier/PhD/Software/Codes-Masterlist") # Bren
library(tidyverse)
library(readxl)
#library(xlsx)
library(openxlsx)
# Import three sheets
codes <- read_xlsx("Codes_Masterlist.xlsx", sheet = "Codes") %>%
mutate_all(as.character)
# Import three sheets
codes <- read_xlsx("Codes_Masterlist.xlsx", sheet = "Codes")
codes <- read_xlsx("Codes_Masterlist.xlsx", sheet = "Codes")
regional <- read_xlsx("Codes_Masterlist.xlsx",
sheet = "UN_Regional_Groupings") %>%
mutate_all(as.character)
wb <- read_xlsx("Codes_Masterlist.xlsx",
sheet = "World_Bank_Groupings") %>%
mutate_all(as.character)
# June 2018 classification
WB <- read_xls("CLASS.xls", skip = 4)
WB <- WB %>%
select(Economy, Code, Region, `Income group`, `Lending category`, Other) %>%
rename(Country = Economy, ISO3166.3 = Code, WB_Income_Group = `Income group`,
Lending_Category = `Lending category`, WB_Other = Other) %>%
filter(Country != "x")
WB$WB_Income_Group_Code2 <- NA
WB$WB_Income_Group_Code2 <- ifelse(WB$WB_Income_Group == "Low income", "LIC", WB$WB_Income_Group_Code2)
WB$WB_Income_Group_Code2 <- ifelse(WB$WB_Income_Group == "Lower middle income", "LMC", WB$WB_Income_Group_Code2)
WB$WB_Income_Group_Code2 <- ifelse(WB$WB_Income_Group == "Upper middle income", "UMC", WB$WB_Income_Group_Code2)
WB$WB_Income_Group_Code2 <- ifelse(WB$WB_Income_Group == "High income", "HIC", WB$WB_Income_Group_Code2)
no.group <- WB %>% filter(is.na(WB_Income_Group_Code2))
codes <- left_join(codes, WB %>% select(ISO3166.3, Lending_Category, WB_Other, WB_Income_Group_Code2),
by = c("ISO3166.3"))
codes %>% filter(codes$WB_Income_Group_Code != WB_Income_Group_Code2) %>% nrow
codes$WB_Income_Group_Code2 <- NULL
# Import three sheets
codes <- read_xlsx("Codes_Masterlist.xlsx", sheet = "Codes") %>%
select(-c(WB_Other))
# Import three sheets
codes <- read_xlsx("Codes_Masterlist.xlsx", sheet = "Codes") %>%
select(-c(WB_Other, WB_Lending_Category))
regional <- read_xlsx("Codes_Masterlist.xlsx",
sheet = "UN_Regional_Groupings")
wb <- read_xlsx("Codes_Masterlist.xlsx",
sheet = "World_Bank_Groupings")
#setwd("C:/Users/Alice/Box Sync/PhD/Software/Codes-Masterlist") # Laptop
setwd("C:/boxsync/alepissier/PhD/Software/Codes-Masterlist") # Bren
library(tidyverse)
library(readxl)
library(openxlsx)
# Import three sheets
codes <- read_xlsx("Codes_Masterlist.xlsx", sheet = "Codes") %>%
select(-c(WB_Other, WB_Lending_Category))
regional <- read_xlsx("Codes_Masterlist.xlsx",
sheet = "UN_Regional_Groupings")
wb <- read_xlsx("Codes_Masterlist.xlsx",
sheet = "World_Bank_Groupings")
# June 2018 classification
WB <- read_xls("CLASS.xls", skip = 4)
WB <- WB %>%
select(Economy, Code, Region, `Income group`, `Lending category`, Other) %>%
rename(Country = Economy, ISO3166.3 = Code, WB_Income_Group = `Income group`,
WB_Lending_Category = `Lending category`, WB_Other = Other) %>%
filter(Country != "x")
WB$WB_Income_Group_Code2 <- NA
WB$WB_Income_Group_Code2 <- ifelse(WB$WB_Income_Group == "Low income", "LIC", WB$WB_Income_Group_Code2)
WB$WB_Income_Group_Code2 <- ifelse(WB$WB_Income_Group == "Lower middle income", "LMC", WB$WB_Income_Group_Code2)
WB$WB_Income_Group_Code2 <- ifelse(WB$WB_Income_Group == "Upper middle income", "UMC", WB$WB_Income_Group_Code2)
WB$WB_Income_Group_Code2 <- ifelse(WB$WB_Income_Group == "High income", "HIC", WB$WB_Income_Group_Code2)
no.group <- WB %>% filter(is.na(WB_Income_Group_Code2))
View(no.group)
codes <- left_join(codes, WB %>% select(ISO3166.3, WB_Lending_Category, WB_Other, WB_Income_Group_Code2),
by = c("ISO3166.3"))
codes %>% filter(codes$WB_Income_Group_Code != WB_Income_Group_Code2) %>% nrow
codes$WB_Income_Group_Code2 <- NULL
?mutate_At
?mutate_at
codes <- codes %>%
mutate_at(c(UN_Sub-region_Code, UN_Intermediate_Region_Code, UN_M49_Code,
UN_LDC, UN_LLDC, UN_SIDS, IMF_Code,
OECD, EU28, `Arab League`),
as.numeric)
codes <- codes %>%
mutate_at(c(`UN_Sub-region_Code`, UN_Intermediate_Region_Code, UN_M49_Code,
UN_LDC, UN_LLDC, UN_SIDS, IMF_Code,
OECD, EU28, `Arab League`),
as.numeric)
codes <- codes %>%
mutate_at(c("UN_Sub-region_Code", "UN_Intermediate_Region_Code", "UN_M49_Code",
"UN_LDC", "UN_LLDC", "UN_SIDS", "IMF_Code",
"OECD", "EU28", "Arab League"),
as.numeric)
?arrange
codes <- codes %>%
arrange(ISO3166.3, ISO3166.2, Country,
UN_Region, UN_Region_Code, UN_Sub-region, `UN_Sub-region_Code`, UN_Intermediate_Region, UN_Intermediate_Region_Code,
UN_M49_Code, UN_LDC, UN_LLDC, UN_SIDS, `UN_Developing-Developed`, IMF_Code,
WB_Income_Group_Code, WB_Region, WB_Lending_Category, WB_Other,
OECD, EU28, `Arab League`, Longitude, Latitude)
codes <- codes %>%
arrange(ISO3166.3, ISO3166.2, Country,
UN_Region, UN_Region_Code, `UN_Sub-region`, `UN_Sub-region_Code`, UN_Intermediate_Region, UN_Intermediate_Region_Code,
UN_M49_Code, UN_LDC, UN_LLDC, UN_SIDS, `UN_Developing-Developed`, IMF_Code,
WB_Income_Group_Code, WB_Region, WB_Lending_Category, WB_Other,
OECD, EU28, `Arab League`, Longitude, Latitude)
codes <- codes %>%
arrange(ISO3166.3, ISO3166.2, Country,
UN_Region, UN_Region_Code, `UN_Sub-region`, `UN_Sub-region_Code`, UN_Intermediate_Region, UN_Intermediate_Region_Code,
UN_M49_Code, UN_LDC, UN_LLDC, UN_SIDS, `UN_Developing-Developed`, IMF_Code,
WB_Income_Group_Code, WB_Region, WB_Lending_Category, WB_Other,
OECD, EU28, `Arab League`, Longitude, Latitude)
View(codes)
#setwd("C:/Users/Alice/Box Sync/PhD/Software/Codes-Masterlist") # Laptop
setwd("C:/boxsync/alepissier/PhD/Software/Codes-Masterlist") # Bren
library(tidyverse)
library(readxl)
library(openxlsx)
# Import three sheets
codes <- read_xlsx("Codes_Masterlist.xlsx", sheet = "Codes") %>%
select(-c(WB_Other, WB_Lending_Category))
regional <- read_xlsx("Codes_Masterlist.xlsx",
sheet = "UN_Regional_Groupings")
wb <- read_xlsx("Codes_Masterlist.xlsx",
sheet = "World_Bank_Groupings")
# June 2018 classification
WB <- read_xls("CLASS.xls", skip = 4)
WB <- WB %>%
select(Economy, Code, Region, `Income group`, `Lending category`, Other) %>%
rename(Country = Economy, ISO3166.3 = Code, WB_Income_Group = `Income group`,
WB_Lending_Category = `Lending category`, WB_Other = Other) %>%
filter(Country != "x")
WB$WB_Income_Group_Code2 <- NA
WB$WB_Income_Group_Code2 <- ifelse(WB$WB_Income_Group == "Low income", "LIC", WB$WB_Income_Group_Code2)
WB$WB_Income_Group_Code2 <- ifelse(WB$WB_Income_Group == "Lower middle income", "LMC", WB$WB_Income_Group_Code2)
WB$WB_Income_Group_Code2 <- ifelse(WB$WB_Income_Group == "Upper middle income", "UMC", WB$WB_Income_Group_Code2)
WB$WB_Income_Group_Code2 <- ifelse(WB$WB_Income_Group == "High income", "HIC", WB$WB_Income_Group_Code2)
no.group <- WB %>% filter(is.na(WB_Income_Group_Code2))
codes <- left_join(codes, WB %>% select(ISO3166.3, WB_Lending_Category, WB_Other, WB_Income_Group_Code2),
by = c("ISO3166.3"))
codes %>% filter(codes$WB_Income_Group_Code != WB_Income_Group_Code2) %>% nrow
codes$WB_Income_Group_Code2 <- NULL
codes <- codes %>%
mutate_at(c("UN_Sub-region_Code", "UN_Intermediate_Region_Code", "UN_M49_Code",
"UN_LDC", "UN_LLDC", "UN_SIDS", "IMF_Code",
"OECD", "EU28", "Arab League"),
as.numeric)
codes <- codes %>%
arrange(ISO3166.3, ISO3166.2, Country,
UN_Region, UN_Region_Code, `UN_Sub-region`, `UN_Sub-region_Code`, UN_Intermediate_Region, UN_Intermediate_Region_Code,
UN_M49_Code, UN_LDC, UN_LLDC, UN_SIDS, `UN_Developing-Developed`, IMF_Code,
WB_Income_Group_Code, WB_Region, WB_Lending_Category, WB_Other,
OECD, EU28, `Arab League`, Longitude, Latitude)
codes <- codes %>%
select(ISO3166.3, ISO3166.2, Country,
UN_Region, UN_Region_Code, `UN_Sub-region`, `UN_Sub-region_Code`, UN_Intermediate_Region, UN_Intermediate_Region_Code,
UN_M49_Code, UN_LDC, UN_LLDC, UN_SIDS, `UN_Developing-Developed`, IMF_Code,
WB_Income_Group_Code, WB_Region, WB_Lending_Category, WB_Other,
OECD, EU28, `Arab League`, Longitude, Latitude)
codes <- codes %>%
arrange(ISO3166.3)
View(codes)
book <- createWorkbook()
hs <- createStyle(textDecoration = "Bold")
addWorksheet(book, "Codes")
writeData(book, sheet = "Codes",
x = codes, headerStyle = hs)
addWorksheet(book, "UN_Regional_Groupings")
writeData(book, sheet = "UN_Regional_Groupings",
x = regional, headerStyle = hs)
addWorksheet(book, "World_Bank_Groupings")
writeData(book, sheet = "World_Bank_Groupings",
x = wb, headerStyle = hs)
saveWorkbook(book, "Codes-Masterlist2.xlsx", overwrite = TRUE)
#setwd("C:/Users/Alice/Box Sync/PhD/Software/Codes-Masterlist") # Laptop
setwd("C:/boxsync/alepissier/PhD/Software/Codes-Masterlist") # Bren
library(tidyverse)
library(readxl)
library(openxlsx)
# Import three sheets
codes <- read_xlsx("Codes_Masterlist.xlsx", sheet = "Codes") %>%
select(-c(WB_Other, WB_Lending_Category))
regional <- read_xlsx("Codes_Masterlist.xlsx",
sheet = "UN_Regional_Groupings")
wb <- read_xlsx("Codes_Masterlist.xlsx",
sheet = "World_Bank_Groupings")
# June 2018 classification
WB <- read_xls("CLASS.xls", skip = 4)
WB <- WB %>%
select(Economy, Code, Region, `Income group`, `Lending category`, Other) %>%
rename(Country = Economy, ISO3166.3 = Code, WB_Income_Group = `Income group`,
WB_Lending_Category = `Lending category`, WB_Other = Other) %>%
filter(Country != "x")
WB$WB_Income_Group_Code2 <- NA
WB$WB_Income_Group_Code2 <- ifelse(WB$WB_Income_Group == "Low income", "LIC", WB$WB_Income_Group_Code2)
WB$WB_Income_Group_Code2 <- ifelse(WB$WB_Income_Group == "Lower middle income", "LMC", WB$WB_Income_Group_Code2)
WB$WB_Income_Group_Code2 <- ifelse(WB$WB_Income_Group == "Upper middle income", "UMC", WB$WB_Income_Group_Code2)
WB$WB_Income_Group_Code2 <- ifelse(WB$WB_Income_Group == "High income", "HIC", WB$WB_Income_Group_Code2)
no.group <- WB %>% filter(is.na(WB_Income_Group_Code2))
codes <- left_join(codes, WB %>% select(ISO3166.3, WB_Lending_Category, WB_Other, WB_Income_Group_Code2),
by = c("ISO3166.3"))
codes %>% filter(codes$WB_Income_Group_Code != WB_Income_Group_Code2) %>% nrow
codes$WB_Income_Group_Code2 <- NULL
codes <- codes %>%
mutate_at(c("UN_Sub-region_Code", "UN_Intermediate_Region_Code", "UN_M49_Code",
"UN_LDC", "UN_LLDC", "UN_SIDS", "IMF_Code",
"OECD", "EU28", "Arab League"),
as.numeric)
codes <- codes %>%
select(ISO3166.3, ISO3166.2, Country,
UN_Region, UN_Region_Code, `UN_Sub-region`, `UN_Sub-region_Code`, UN_Intermediate_Region, UN_Intermediate_Region_Code,
UN_M49_Code, UN_LDC, UN_LLDC, UN_SIDS, `UN_Developing-Developed`, IMF_Code,
WB_Income_Group_Code, WB_Region, WB_Lending_Category, WB_Other,
OECD, EU28, `Arab League`, Longitude, Latitude)
codes <- codes %>%
arrange(ISO3166.3)
book <- createWorkbook()
hs <- createStyle(textDecoration = "Bold")
addWorksheet(book, "Codes")
writeData(book, sheet = "Codes",
x = codes, headerStyle = hs)
addWorksheet(book, "UN_Regional_Groupings")
writeData(book, sheet = "UN_Regional_Groupings",
x = regional, headerStyle = hs)
addWorksheet(book, "World_Bank_Groupings")
writeData(book, sheet = "World_Bank_Groupings",
x = wb, headerStyle = hs)
saveWorkbook(book, "Codes_Masterlist.xlsx", overwrite = TRUE)
View(regional)
#setwd("C:/Users/Alice/Box Sync/PhD/Software/Codes-Masterlist") # Laptop
setwd("C:/boxsync/alepissier/PhD/Software/Codes-Masterlist") # Bren
library(tidyverse)
library(readxl)
library(openxlsx)
# Import three sheets
codes <- read_xlsx("Codes_Masterlist.xlsx", sheet = "Codes") %>%
select(-c(WB_Other, WB_Lending_Category))
regional <- read_xlsx("Codes_Masterlist.xlsx",
sheet = "UN_Regional_Groupings")
wb <- read_xlsx("Codes_Masterlist.xlsx",
sheet = "World_Bank_Groupings")
# June 2018 classification
WB <- read_xls("CLASS.xls", skip = 4)
WB <- WB %>%
select(Economy, Code, Region, `Income group`, `Lending category`, Other) %>%
rename(Country = Economy, ISO3166.3 = Code, WB_Income_Group = `Income group`,
WB_Lending_Category = `Lending category`, WB_Other = Other) %>%
filter(Country != "x")
WB$WB_Income_Group_Code2 <- NA
WB$WB_Income_Group_Code2 <- ifelse(WB$WB_Income_Group == "Low income", "LIC", WB$WB_Income_Group_Code2)
WB$WB_Income_Group_Code2 <- ifelse(WB$WB_Income_Group == "Lower middle income", "LMC", WB$WB_Income_Group_Code2)
WB$WB_Income_Group_Code2 <- ifelse(WB$WB_Income_Group == "Upper middle income", "UMC", WB$WB_Income_Group_Code2)
WB$WB_Income_Group_Code2 <- ifelse(WB$WB_Income_Group == "High income", "HIC", WB$WB_Income_Group_Code2)
no.group <- WB %>% filter(is.na(WB_Income_Group_Code2))
codes <- left_join(codes, WB %>% select(ISO3166.3, WB_Lending_Category, WB_Other, WB_Income_Group_Code2),
by = c("ISO3166.3"))
codes %>% filter(codes$WB_Income_Group_Code != WB_Income_Group_Code2) %>% nrow
codes$WB_Income_Group_Code2 <- NULL
codes <- codes %>%
mutate_at(c("UN_Sub-region_Code", "UN_Intermediate_Region_Code", "UN_M49_Code",
"UN_LDC", "UN_LLDC", "UN_SIDS", "IMF_Code",
"OECD", "EU28", "Arab League"),
as.numeric)
regional <- regional %>%
mutate_at(c("UN_Region_Code", "UN_Sub-region_Code", "UN_Intermediate_Region_Code"),
as.numeric)
codes <- codes %>%
select(ISO3166.3, ISO3166.2, Country,
UN_Region, UN_Region_Code, `UN_Sub-region`, `UN_Sub-region_Code`, UN_Intermediate_Region, UN_Intermediate_Region_Code,
UN_M49_Code, UN_LDC, UN_LLDC, UN_SIDS, `UN_Developing-Developed`, IMF_Code,
WB_Income_Group_Code, WB_Region, WB_Lending_Category, WB_Other,
OECD, EU28, `Arab League`, Longitude, Latitude)
codes <- codes %>%
arrange(ISO3166.3)
book <- createWorkbook()
hs <- createStyle(textDecoration = "Bold")
addWorksheet(book, "Codes")
writeData(book, sheet = "Codes",
x = codes, headerStyle = hs)
addWorksheet(book, "UN_Regional_Groupings")
writeData(book, sheet = "UN_Regional_Groupings",
x = regional, headerStyle = hs)
addWorksheet(book, "World_Bank_Groupings")
writeData(book, sheet = "World_Bank_Groupings",
x = wb, headerStyle = hs)
saveWorkbook(book, "Codes_Masterlist.xlsx", overwrite = TRUE)
